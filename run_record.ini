# --- run_record.ini (FULL THESIS MATRIX) ---
include omnetpp.ini

[General]
# Reproducibility: 5 seeds per config
rng-class = "cMersenneTwister"
num-rngs = 1
seed-set = 123

# Recording (global)
**.scalar-recording = true
**.vector-recording = true
**.result-recording-modes = all
output-scalar-file = results/${configname}-${runnumber}.sca
output-vector-file = results/${configname}-${runnumber}.vec

# ----------- Global defaults (can be overridden per config) -----------
# Crypto keys (shared)
**.sensor[*].aesKeyHex = "00112233445566778899AABBCCDDEEFF"
**.gateway.aesKeyHex   = "00112233445566778899AABBCCDDEEFF"
**.fakeNode.aesKeyHex  = "00112233445566778899AABBCCDDEEFF"

# Sensor defaults
**.sensor[*].sendInterval = 0.5s
**.sensor[*].mode = "Secure"  # Secure | NoSecurity | Replay

# Gateway defaults
**.gateway.procDelay = 1ms
**.gateway.hmacWindow = 1s
**.gateway.costForward_mJ = 5
**.gateway.costVerify_mJ  = 5
**.gateway.batteryInit_mJ = 5000

# Security stages (enabled in Secure/Attack unless overridden)
**.gateway.securityEnabled = true
**.gateway.checkHmac = true
**.gateway.checkFreshness = true
**.gateway.checkDuplicate = true

# Duplicate method & params
**.gateway.duplicateMethod = "set"       # set | bloom | sbf
**.gateway.bloomBits   = 16384
**.gateway.bloomHashes = 3
**.gateway.sbfBits   = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay  = 0.02

# Attack defaults (replay + legit duplicates burst)
**.fakeNode.enabled = false
**.fakeNode.attackMode = 1
**.fakeNode.replayInterval = 2.5s
**.fakeNode.validMac = true              # valid CMAC for real replay detection
**.fakeNode.replayId = 100000
**.fakeNode.replayTsUs = 500000
**.fakeNode.dupBurstLen = 4              # 1+4 = 5 packets per burst
**.fakeNode.dupBurstGap = 200ms
**.fakeNode.outOfOrderJitter = 80ms

sim-time-limit = 10s


#####################################################################
#                  BASELINES (NoSec / Secure / Attack)
#                  for N in {5, 20, 50}
#####################################################################

# -------------------- Secure --------------------
[Config Secure5_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 5
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true

[Config Secure20_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 20
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true

[Config Secure50_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true

# -------------------- No Security --------------------
[Config NoSec5_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 5
**.fakeNode.enabled = false
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0

[Config NoSec20_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 20
**.fakeNode.enabled = false
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0

[Config NoSec50_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0

# -------------------- Attack (Secure under Replay+Dup) --------------------
[Config Attack5_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 5
**.sensor[*].mode = "Secure"
**.fakeNode.enabled = true
**.fakeNode.validMac = true
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 1s

[Config Attack20_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 20
**.sensor[*].mode = "Secure"
**.fakeNode.enabled = true
**.fakeNode.validMac = true
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 1s

[Config Attack50_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.sensor[*].mode = "Secure"
**.fakeNode.enabled = true
**.fakeNode.validMac = true
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 3s     # larger window in denser network


# -------------------- Attack on NoSec (vulnerability baseline) --------------------
[Config AttackOnNoSec5_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 5
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0
**.fakeNode.enabled = true
**.fakeNode.validMac = false

[Config AttackOnNoSec20_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 20
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0
**.fakeNode.enabled = true
**.fakeNode.validMac = false

[Config AttackOnNoSec50_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.sensor[*].mode = "NoSecurity"
**.gateway.securityEnabled = false
**.gateway.procDelay = 0s
**.gateway.costVerify_mJ = 0
**.fakeNode.enabled = true
**.fakeNode.validMac = false


#####################################################################
#                     Ablations (N=50)
#####################################################################

# Only HMAC
[Config Secure50_hmacOnly]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true
**.gateway.checkHmac = true
**.gateway.checkFreshness = false
**.gateway.checkDuplicate = false

# Only Freshness
[Config Secure50_freshOnly]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true
**.gateway.checkHmac = false
**.gateway.checkFreshness = true
**.gateway.checkDuplicate = false

# Only Duplicate (set)
[Config Secure50_dupOnly]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true
**.gateway.checkHmac = false
**.gateway.checkFreshness = false
**.gateway.checkDuplicate = true
**.gateway.duplicateMethod = "set"

# Only Duplicate (bloom)
[Config Secure50_dupOnly_bloom]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.fakeNode.enabled = false
**.sensor[*].mode = "Secure"
**.gateway.securityEnabled = true
**.gateway.checkHmac = false
**.gateway.checkFreshness = false
**.gateway.checkDuplicate = true
**.gateway.duplicateMethod = "bloom"
**.gateway.bloomBits = 16384
**.gateway.bloomHashes = 3


#####################################################################
#               Full pipeline with Bloom (all N)
#####################################################################

[Config Secure5_bloom]    
extends=Secure5_record
**.gateway.duplicateMethod = "bloom"

[Config Secure20_bloom]  
extends=Secure20_record
**.gateway.duplicateMethod = "bloom"

[Config Secure50_bloom]   
extends=Secure50_record
**.gateway.duplicateMethod = "bloom"

[Config Attack5_bloom]    
extends=Attack5_record
**.gateway.duplicateMethod = "bloom"

[Config Attack20_bloom]   
extends=Attack20_record
**.gateway.duplicateMethod = "bloom"

[Config Attack50_bloom]   
extends=Attack50_record
**.gateway.duplicateMethod = "bloom"


#####################################################################
#               Full pipeline with SBF (all N)
#####################################################################

[Config Secure5_sbf]   
extends=Secure5_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02

[Config Secure20_sbf]   
extends=Secure20_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02

[Config Secure50_sbf]   
extends=Secure50_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02

[Config Attack5_sbf]    
extends=Attack5_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02

[Config Attack20_sbf]   
extends=Attack20_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02

[Config Attack50_sbf]   
extends=Attack50_record
**.gateway.duplicateMethod = "sbf"
**.gateway.sbfBits = 16384
**.gateway.sbfHashes = 3
**.gateway.sbfDecay = 0.02


#####################################################################
#                     W sweeps (N=50)
#####################################################################

[Config N50_Secure_W_sweep]
extends = Secure50_record
repeat = 4
**.gateway.hmacWindow = ${W=0.5s,1s,3s,5s}

[Config N50_Attack_W_sweep]
extends = Attack50_record
repeat = 4
**.gateway.hmacWindow = ${W=0.5s,1s,3s,5s}


#####################################################################
#                 Bloom m/k sweeps (N=50)
#####################################################################

[Config N50_Secure_bloom_mk]
extends = Secure50_bloom
repeat = 9
**.gateway.bloomBits   = ${m=8192,16384,32768}
**.gateway.bloomHashes = ${k=2,3,4}

[Config N50_Attack_bloom_mk]
extends = Attack50_bloom
repeat = 9
**.gateway.bloomBits   = ${m=8192,16384,32768}
**.gateway.bloomHashes = ${k=2,3,4}


#####################################################################
#                 SBF sweeps (N=50) â€” long runs
#####################################################################

[Config N50_Secure_sbf_sweep]
extends = Secure50_sbf
repeat = 6
**.gateway.sbfBits   = ${mb=8192,16384}
**.gateway.sbfHashes = ${kh=2,3}
**.gateway.sbfDecay  = ${dec=0.01,0.02,0.05}
sim-time-limit = 120s

[Config N50_Attack_sbf_sweep]
extends = Attack50_sbf
repeat = 6
**.gateway.sbfBits   = ${mb=8192,16384}
**.gateway.sbfHashes = ${kh=2,3}
**.gateway.sbfDecay  = ${dec=0.01,0.02,0.05}
sim-time-limit = 120s


#####################################################################
#          Scalability with fixed memory (m const across N)
#####################################################################

# Secure with Bloom, m fixed
[Config Scale_Secure_Bloom_m16384_N5]   
extends=Secure5_bloom
**.gateway.bloomBits = 16384
[Config Scale_Secure_Bloom_m16384_N20]  
extends=Secure20_bloom
**.gateway.bloomBits = 16384
[Config Scale_Secure_Bloom_m16384_N50]  
extends=Secure50_bloom
**.gateway.bloomBits = 16384

# Attack with Bloom, m fixed
[Config Scale_Attack_Bloom_m16384_N5]   
extends=Attack5_bloom
**.gateway.bloomBits = 16384
[Config Scale_Attack_Bloom_m16384_N20]  
extends=Attack20_bloom
**.gateway.bloomBits = 16384
[Config Scale_Attack_Bloom_m16384_N50]  
extends=Attack50_bloom
**.gateway.bloomBits = 16384


#####################################################################
#      (Optional) Permutations labels â€” require order support in code
#      If Gateway supports order switching, map these to H/F/B orders.
#####################################################################
# [Config Order_HFB] ...     # baseline (current implementation)
# [Config Order_HBF] ...
# [Config Order_FHB] ...
# [Config Order_FBH] ...
# [Config Order_BHF] ...
# [Config Order_BFH] ...

#####################################################################
#                 Canonical aliases (uniform names)
#####################################################################
[Config N5_NoSec]   
extends=NoSec5_record
[Config N20_NoSec]  
extends=NoSec20_record
[Config N50_NoSec]  
extends=NoSec50_record

[Config N5_Secure]  
extends=Secure5_record
[Config N20_Secure] 
extends=Secure20_record
[Config N50_Secure] 
extends=Secure50_record

[Config N5_Attack]  
extends=Attack5_record
[Config N20_Attack] 
extends=Attack20_record
[Config N50_Attack] 
extends=Attack50_record

# Named ablations & filters
[Config N50_Secure_hmacOnly]       
extends=Secure50_hmacOnly
[Config N50_Secure_freshOnly]      
extends=Secure50_freshOnly
[Config N50_Secure_dupOnly]        
extends=Secure50_dupOnly
[Config N50_Secure_dupOnly_bloom]  
extends=Secure50_dupOnly_bloom
[Config N50_Secure_bloom]          
extends=Secure50_bloom
[Config N50_Secure_sbf]            
extends=Secure50_sbf
[Config N50_Attack_bloom]          
extends=Attack50_bloom
[Config N50_Attack_sbf]            
extends=Attack50_sbf

# --- Permutations of stage order (needs GatewayNode with stageOrder) ---

[Config N50_Secure_bloom_order]
extends = N50_Secure_bloom
**.gateway.stageOrder = ${ord="HFB","HBF","FHB","FBH","BHF","BFH"}
description = "ord=${ord}"

[Config N50_Attack_bloom_order]
extends = N50_Attack_bloom
**.gateway.stageOrder = ${ord="HFB","HBF","FHB","FBH","BHF","BFH"}
description = "ord=${ord}"




[Config Attack50_window05s_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 0.5s
**.gateway.procDelay = 1ms
**.gateway.costForward_mJ = 5
**.gateway.costVerify_mJ  = 5
**.gateway.batteryInit_mJ = 5000
**.fakeNode.enabled = true
**.fakeNode.attackMode = 1
**.fakeNode.replayInterval = 2.5s
sim-time-limit = 10s

[Config Attack50_window1s_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 1s
**.gateway.procDelay = 1ms
**.gateway.costForward_mJ = 5
**.gateway.costVerify_mJ  = 5
**.gateway.batteryInit_mJ = 5000
**.fakeNode.enabled = true
**.fakeNode.attackMode = 1
**.fakeNode.replayInterval = 2.5s
sim-time-limit = 10s

[Config Attack50_window3s_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 3s
**.gateway.procDelay = 1ms
**.gateway.costForward_mJ = 5
**.gateway.costVerify_mJ  = 5
**.gateway.batteryInit_mJ = 5000
**.fakeNode.enabled = true
**.fakeNode.attackMode = 1
**.fakeNode.replayInterval = 2.5s
sim-time-limit = 10s

[Config Attack50_window5s_record]
network = ned.LightIoTNetwork
LightIoTNetwork.numSensorNodes = 50
**.gateway.securityEnabled = true
**.gateway.hmacWindow = 5s
**.gateway.procDelay = 1ms
**.gateway.costForward_mJ = 5
**.gateway.costVerify_mJ  = 5
**.gateway.batteryInit_mJ = 5000
**.fakeNode.enabled = true
**.fakeNode.attackMode = 1
**.fakeNode.replayInterval = 2.5s
sim-time-limit = 10s